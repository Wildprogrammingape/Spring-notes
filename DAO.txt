DAO:   Data Access Object

It's just a helper class or utility class for talking to the database.
是个辅助类，用于连接数据库(通过hibernate这个在Java class和database的映射框架)

1.
流程：
      
DAO --  session factory -- data source(db connection information) -- database

All of these are dependencies! 因此dependency injection 依赖注入在这里应用，通过
wire them together将他们联系起来。


data source包含： driverClass name, jdbcUrl, user id, password 等等，在configuration file中

2. Special annotation for DAO
@Respository: 用于标注数据访问组件，即DAO组件



Spring 2.5 中除了提供 @Component 注释外，还定义了几个拥有特殊语义的注释，它们分别是：@Repository、@Service 和 @Controller。
在目前的 Spring 版本中，这 3 个注释和 @Component 是等效的，但是从注释类的命名上，很容易看出这 3 个注释分别和持久层、业务层和控制层（Web 层）相对应。
虽然目前这3 个注释和 @Component 相比没有什么新意，但 Spring 将在以后的版本中为它们添加特殊的功能。


所以，如果 Web 应用程序采用了经典的三层分层结构的话，最好在持久层、业务层和控制层分别采用上述注解对分层中的类进行注释。

@Service用于标注业务层组件



@Controller用于标注控制层组件（如struts中的action）


@Repository用于标注数据访问组件，即DAO组件


@Component泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。


